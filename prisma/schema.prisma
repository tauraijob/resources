generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  EMPLOYEE
  ADMIN
}

enum BookingStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  username     String    @unique
  passwordHash String
  name         String?
  role         UserRole  @default(EMPLOYEE)
  active       Boolean   @default(true)
  resetToken   String?
  resetExpiry  DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  bookings  Booking[]
  approvals Approval[] @relation("ApprovalAdmin")
}

model Resource {
  id        Int      @id @default(autoincrement())
  name      String
  category  String
  location  String?
  metadata  Json?
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookings Booking[]
}

model Booking {
  id         Int           @id @default(autoincrement())
  resource   Resource      @relation(fields: [resourceId], references: [id])
  resourceId Int
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  location   String?
  startTime  DateTime
  endTime    DateTime
  status     BookingStatus @default(PENDING)
  notes      String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  approval Approval?

  @@index([resourceId, startTime])
  @@index([resourceId, endTime])
}

model Approval {
  id        Int           @id @default(autoincrement())
  booking   Booking       @relation(fields: [bookingId], references: [id])
  bookingId Int           @unique
  admin     User          @relation("ApprovalAdmin", fields: [adminId], references: [id])
  adminId   Int
  status    BookingStatus
  note      String?
  createdAt DateTime      @default(now())
}
